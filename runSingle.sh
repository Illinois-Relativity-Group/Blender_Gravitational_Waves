#!/bin/bash

trap "echo 'Killing all background jobs...'; kill 0" SIGINT EXIT

# Directory setup
ROOT_DIR="/data/yliang3/memory/blender_wave"
FRAME_DIR="$ROOT_DIR/obj_data/"             #The obj data generated from vtk files
MEM_DIR="$ROOT_DIR/texturemap/"          #Memory data
PLOT_MEM=1                                  #If you want to plot memory, set to 1. If not, set to 0. 
OUTPUT_DIR="$ROOT_DIR/MOVIE/test"
LOG_DIR="$ROOT_DIR/logs/test"

BLENDER_EXEC="blender"                       #yes, you are using blender indeed
SCRIPT_PATH="$ROOT_DIR/plot_single.py"       #The plotting script
BLEND_FILE_PATH="$ROOT_DIR/white_plane.blend" #This file contains a white plane
WITH_BLEND_FILE=1                            #If you want to copy everything from a blender file to current scene
DENSITY_PATH="$ROOT_DIR/nsns_movie/full_movie" #directory of the density movie generated by Visit. Make sure transparent background
WITH_DENSITY=1                                #If you want to add density
BH_RADIUS_FILE="$ROOT_DIR/bh_data/update_bh_radius.txt"
WITH_BH=1                                     #If you want to plot the bh as solid sphere. This is only used horizon data is missing
SHADER="$ROOT_DIR"                            #Where do you placed the shader
SAVE_BLENDER_FILE=1                           #If you want to save a blender file for Debug
ZERO_PLANE=1                                  #If you want to make a 0 plane to show the memory in the very end

mkdir -p "$OUTPUT_DIR"
mkdir -p "$LOG_DIR"

# ----------------------------
# Frame selection - only specific frame numbers
# ----------------------------

# Define frame numbers you want to render
DESIRED_FRAMES=(0001)  # Frame you want to render. This corespond to xxxxxx in hplus_xxxxxx.obj


#This code is use if you want to run the full movie, it runs all even frames due to the fact that frame rate in gw is different from frame rate in density and other things. 
#Moreover, the correct framerate is 1:3, so you might want to use 3 in the future
#Also Note, there's a rounding function, so it won't hurt if you use 1. But the NS will looks not smooth
#DESIRED_FRAMES=()
#for i in $(seq -w 0 2 1914); do
#    DESIRED_FRAMES+=("$i")
#done

# Map frame numbers to existing .obj file paths
SELECTED_FRAME_FILES=()
SELECTED_FRAME_NUMS=()

for frame_num in "${DESIRED_FRAMES[@]}"; do
    frame_file="$FRAME_DIR/hplus_00${frame_num}.obj"
    if [[ -f "$frame_file" ]]; then
        SELECTED_FRAME_FILES+=("$frame_file")
        SELECTED_FRAME_NUMS+=("$frame_num")
    else
        echo "Warning: Frame file not found: $frame_file"
    fi
done

TOTAL_FRAMES=${#SELECTED_FRAME_FILES[@]}
if [[ $TOTAL_FRAMES -eq 0 ]]; then
    echo "Error: No valid selected frame files found."
    #exit 1
fi

echo "Total selected frames to render: $TOTAL_FRAMES"

# ----------------------------
# Render frames sequentially
# ----------------------------

for (( i=0; i<TOTAL_FRAMES; i++ )); do
    frame_file="${SELECTED_FRAME_FILES[$i]}"
    frame_name=$(basename "$frame_file")
    frame_num="${SELECTED_FRAME_NUMS[$i]}"

    echo "$(date): Rendering $frame_name (Frame $frame_num)"

    $BLENDER_EXEC --background --python "$SCRIPT_PATH" -- "$frame_name" "$frame_num" "$OUTPUT_DIR" "$BLEND_FILE_PATH" "$FRAME_DIR" "$SHADER" "$MEM_DIR" "$DENSITY_PATH" "$BH_RADIUS_FILE" "$PLOT_MEM" "$WITH_BLEND_FILE" "$WITH_DENSITY" "$WITH_BH" "$SAVE_BLENDER_FILE" "$ZERO_PLANE">> "$LOG_DIR/render.log" 2>&1

    if [ $? -ne 0 ]; then
        echo "$(date): Error rendering $frame_name (Frame $frame_num). Check logs."
    else
        echo "$(date): Successfully rendered $frame_name (Frame $frame_num)"
    fi
done

echo "$(date): All rendering complete."

